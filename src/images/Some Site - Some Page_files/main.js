"use strict";var elemHero1=document.querySelector(".hero"),objHero=new Hero(elemHero1);function Hero(t){var e=this,o={start:function(){},stop:function(){},play:function(){o.start(),setTimeout(o.stop,300)}};return this.action={jump:function(){return o.stop(),o.start=function(){return t.classList.add("hero_jump")},o.stop=function(){return t.classList.remove("hero_jump")},o.play(),e}},this}
"use strict";function FunText(){var a=document.querySelector(".fun-text"),e=a.innerText;a.innerHTML="";var l=["fadeIn","fadeInUp","fadeInLeft","fadeInRight"],i=Math.floor(Math.random()*l.length);e.split("").map(function(e,n){console.log(n);var t=document.createElement("span");e=" "===e?"&nbsp;":e,t.innerHTML=e,t.className=l[i],t.style.display="inline-block",t.style.animationDelay=100*n+"ms",a.appendChild(t)})}
"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}var activeDrawsList=[],showFrameRate=!1;function animate(t){var i="number"==typeof(t="object"==_typeof(t)?t:{}).duration?t.duration:1e3,e="number"==typeof t.delay?t.delay:0,n="number"==typeof t.from?t.from:1,o="number"==typeof t.to?t.to:100,f="function"==typeof t.timing?t.timing:linear,c="function"==typeof t.draw?t.draw:function(t){console.log(100*t)},s="function"==typeof t.before?t.before:function(){},m="function"==typeof t.after?t.after:function(){},p=n/100,y=o/100;setTimeout(function(){for(var a=performance.now(),u=a,t=activeDrawsList.length-1;0<=t;t--)if(activeDrawsList[t]===c)return!1;activeDrawsList.push(c);requestAnimationFrame(function t(e){s&&(s(),s=!1);var n=(e-a)/i;if(1<n&&(n=1),p<y)var o=(n+=p)<y;else o=y<(n=-(n-p));var r=f(n);c(r),o?(requestAnimationFrame(t),showFrameRate&&(console.log(frameRate(u,e),Math.round(100*n)),u=e)):(activeDrawsList.splice(activeDrawsList.indexOf(c),1),m&&m())})},e)}function frameRate(t,e){return Math.round(1e3/(e-t))}function zone(t,e,n,o){if(n*=100,o*=100,(e*=100)<=(t*=100)&&t<=n){var r=(t-e)/(n-e);return o&&o(r),r}return t<=e?0:n<=t?1:void 0}function makeEaseOut(e){return function(t){return 1-e(1-t)}}function makeEaseInOut(e){return function(t){return t<.5?e(2*t)/2:(2-e(2*(1-t)))/2}}function linear(t){return t}function quad(t){return Math.pow(t,2)}var quadEaseOut=makeEaseOut(quad);function circ(t){return 1-Math.sin(Math.acos(t))}var circEaseOut=makeEaseOut(circ);function back(t,e){return Math.pow(e,2)*((t+1)*e-t)}var backEaseOut=makeEaseOut(back);function bounce(t){for(var e=0,n=1;;e+=n,n/=2)if((7-4*e)/11<=t)return-Math.pow((11-6*e-11*t)/4,2)+Math.pow(n,2)}var bounceEaseOut=makeEaseOut(bounce);function elastic(t,e){return Math.pow(2,10*(e-1))*Math.cos(20*Math.PI*t/3*e)}var elasticEaseOut=makeEaseOut(elastic);
"use strict";function ready(e){document.addEventListener("DOMContentLoaded",e)}function addEvent(e,t,n){null!=e&&void 0!==e&&(e.addEventListener?e.addEventListener(t,n,!1):e.attachEvent?e.attachEvent("on"+t,n):e["on"+t]=n)}function compareRandom(e,t){return Math.random()-.5}function getDocument(e,t){var n=new XMLHttpRequest;n.open("GET",e),n.onreadystatechange=function(){if(4==this.readyState&&200==this.status){var e=(new DOMParser).parseFromString(this.responseText,"text/html");t(e)}},n.send(null)}function getCookie(e){var t=document.cookie.match(new RegExp("(?:^|; )"+e.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g,"\\$1")+"=([^;]*)"));return t?decodeURIComponent(t[1]):void 0}!function(e,t,n){n=n||window;var o=!1;n.addEventListener(e,function(){o||(o=!0,requestAnimationFrame(function(){n.dispatchEvent(new CustomEvent(t)),o=!1}))})}("resize","optimizedResize");
"use strict";var breakpoint={small:767,medium:992,large:1200};function respondTo(i,n,e,t){if(i>=window.innerWidth){var r=!0;e&&requestAnimationFrame(n)}else r=!1;t&&window.addEventListener("optimizedResize",function(){if(!r&&(r=!0,i>=window.innerWidth))return setTimeout(function(){requestAnimationFrame(n)},100),!0;i<=window.innerWidth&&(r=!1)})}function respondFrom(i,n,e,t){if(i<=window.innerWidth){var r=!0;e&&requestAnimationFrame(n)}else r=!1;t&&window.addEventListener("optimizedResize",function(){if(!r&&(r=!0,i<=window.innerWidth))return setTimeout(function(){requestAnimationFrame(n)},100),!0;i>=window.innerWidth&&(r=!1)})}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
